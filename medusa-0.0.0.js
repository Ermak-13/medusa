// Generated by CoffeeScript 1.3.3
(function() {
  var Browser, InvalidSettings, Screensaver,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  InvalidSettings = (function() {

    function InvalidSettings() {}

    InvalidSettings.build = function(message) {
      return "Invalid Settings: " + message;
    };

    return InvalidSettings;

  })();

  Browser = (function() {

    function Browser(configurations) {
      var configure, initSettings, initWebpage, validSettings,
        _this = this;
      if (configurations == null) {
        configurations = {};
      }
      this.evaluate = __bind(this.evaluate, this);

      this.addCookie = __bind(this.addCookie, this);

      this.getWebpage = __bind(this.getWebpage, this);

      this.open = __bind(this.open, this);

      initSettings = function() {
        var default_settings, name, value, _results;
        default_settings = {
          'windowSize': {
            'width': 800,
            'height': 600
          }
        };
        _this.settings = default_settings;
        _results = [];
        for (name in configurations) {
          value = configurations[name];
          _results.push(_this.settings[name] = value);
        }
        return _results;
      };
      validSettings = function() {
        if (_this.settings['webpageCallback'] == null) {
          throw InvalidSettings.build('webpage callback is empty.');
        }
      };
      initWebpage = function() {
        return _this.webpage = require('webpage').create();
      };
      configure = function() {
        var cookie, _i, _len, _ref;
        _this.webpage.onLoadFinished = _this.settings.webpageCallback;
        if (_this.settings['settings'] != null) {
          _this.webpage.settings = settings;
        }
        if (_this.settings['cookies'] != null) {
          _ref = _this.settings.cookies;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            cookie = _ref[_i];
            _this.addCookie(cookie);
          }
        }
        if (_this.settings['headers'] != null) {
          _this.webpage.customHeaders = _this.settings.headers;
        }
        if (_this.settings['windowSize'] != null) {
          _this.webpage.viewportSize = _this.settings.windowSize;
        }
        return console.log('configu...');
      };
      initSettings();
      validSettings();
      initWebpage();
      configure();
    }

    Browser.start = function(configurations) {
      return new Browser(configurations);
    };

    Browser.run = function(configurations) {
      return new Browser(configurations);
    };

    Browser.prototype.open = function(url) {
      return this.webpage.open(url);
    };

    Browser.prototype.getWebpage = function() {
      return this.webpage;
    };

    Browser.prototype.addCookie = function(configurations) {
      return this.webpage.addCookie(configurations);
    };

    Browser.prototype.evaluate = function(script) {
      return this.webpage.evaluate(script);
    };

    return Browser;

  })();

  Screensaver = (function() {

    function Screensaver(webpage, configurations) {
      if (configurations == null) {
        configurations = {};
      }
      this.save = __bind(this.save, this);

      this.webpage = webpage;
    }

    Screensaver.shoot = function(webpage) {
      return new Screensaver(webpage);
    };

    Screensaver.prototype.save = function(imagePath) {
      return this.webpage.render(imagePath);
    };

    return Screensaver;

  })();

}).call(this);
